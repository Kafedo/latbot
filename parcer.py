# –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏–π —á–µ—Ä–µ–∑ SpaCy

# –ù–µ –∑–∞–±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å/–æ–±–Ω–æ–≤–∏—Ç—å –≤—Å—é –≤–æ—Ç —ç—Ç—É –¥—Ä—è–Ω—å, –∏–Ω–∞—á–µ –æ–Ω–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—Ç:
# –ù–µ –∑–∞–±—ã—Ç—å !pip install https://huggingface.co/latincy/la_core_web_lg/resolve/main/la_core_web_lg-any-py3-none-any.whl
# –ù–µ –∑–∞–±—ã—Ç—å !pip install typing_extensions==4.7.1 --upgrade
# –ù–µ –∑–∞–±—ã—Ç—å !pip install -U pydantic spacy==3.4.4
# –ù–µ –∑–∞–±—ã—Ç—å !pip install -U spacy
# –ï—â—ë –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ –º–æ–¥–µ–ª—å !py -m spacy download ru_core_news_sm
# –ø—Ä–æ–±–æ–≤–∞–ª–∞ !pip install cairosvg (from cairosvg import svg2png) –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, 
# –∞ —á—Ç–æ–±—ã –æ–Ω —Ä–∞–±–æ—Ç–∞–ª - !pip install pipwin, !pipwin install cairocffi,
# –Ω–æ –ª—É—á—à–µ –≤—ã—à–ª–æ !pip install svglib, !pip install rlPyCairo

import spacy
from spacy import displacy 
# –º–æ—Ä—Ñ–æ—Å–∏–Ω—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –µ–µ–µ!
import pandas as pd 
# —á—Ç–æ–±—ã –≤—Å—ë –±—ã–ª–æ –≤ —Ç–∞–±–ª–∏—Ü–µ
from svglib.svglib import svg2rlg 
from reportlab.graphics import renderPM 
# –ø–µ—Ä–µ–≤–æ–¥ —Å—Ö–µ–º –∏–∑ —Ñ–æ—Ä–º–∞—Ç–∞ svg –≤ png, –ø–æ—Ç–æ–º—É —á—Ç–æ —Å svg —Ç–≥–±–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
from pathlib import Path
import pathlib


nlpla = spacy.load('la_core_web_lg')
nlpru = spacy.load("ru_core_news_sm")
# –∑–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª–∏ –¥–ª—è –ª–∞—Ç—ã–Ω–∏ (–¥–ª—è —Ä–∞–∑–±–æ—Ä–æ–≤) –∏ –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ (–¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ –ª–µ–º–º–∞–º)
data = pd.read_csv("phrases.csv", sep="\t")
data.rename(columns={'Unnamed: 0': 'phrases'}, inplace=True)
data['lemmas'] = True
data['analize'] = True
# –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å–æ —Å–∫–∞—á–∞–Ω–Ω—ã–º–∏ —Ñ—Ä–∞–∑–∞–º–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–µ—ë –Ω—É–∂–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏

# –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –≤—Å–µ–π —Ç–∞–±–ª–∏—Ü–µ
for idx, row in data.iterrows():
    docla = nlpla(row[0])
    docru = nlpru(row[1])
    lemma_line = ""
    analize = "üçÉ–ê–Ω–∞–ª–∏–∑ —Ñ—Ä–∞–∑—ã:üçÉ\n"
    # –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–º —Å–ª–æ–≤–∞–º –∏ –¥–µ–ª–∞–µ–º –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑–±–æ—Ä
    for token in docla:
        morfa_features = list(token.morph)
        morphology = "\nüî¶–ü—Ä–∏–∑–Ω–∞–∫–∏:\n"
        for i in range(len(morfa_features)):
            if len(morfa_features) != 0:
                feature = morfa_features[i].split("=")
                if i == len(morfa_features)-1:
                    morphology += f"{feature[0]}: {feature[1]} \n"
                else:
                    morphology += f"{feature[0]}: {feature[1]}, \n"
        lemma_line += f" {token.lemma_}" 
        # –¥–µ–ª–∞–µ–º –ª–µ–º–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –Ω–∞ –ª–∞—Ç—ã–Ω–∏ (–≤–¥—Ä—É–≥ —é–∑–µ—Ä –±—É–¥–µ—Ç –Ω–∞ –Ω–µ–π –∏—Å–∫–∞—Ç—å?)
        analize += f'\n\nüëâ–°–ª–æ–≤–æ "{token.text}":\nüíõ–ù–∞—á–∞–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞ ‚Äî {token.lemma_},\n\
üñ§–ß–∞—Å—Ç—å —Ä–µ—á–∏ ‚Äî {token.pos_}{morphology}'
        # —Å–æ–±–∏—Ä–∞–µ–º –∫—Ä–∞—Å–∏–≤—É—é —Å—Ç—Ä–æ–∫—É –º–æ—Ä—Ñ—Ä–∞–∑–±–æ—Ä–∞, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –≤—Å—Ç–∞–≤–ª—è—Ç—å –≤ –ø–æ—Å—Ç—ã
    options = {"bg": "#E0D8A7", "font": "Times New Roman", "distance": 140}
    svg = displacy.render(docla, style="dep", options=options)
    output_path = Path("./plots/" + str(idx) + ".svg")
    output_path.open("w", encoding="utf-8").write(svg)
    # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ö–µ–º—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ –ª–∞—Ç–∏–Ω—Å–∫–æ–π —Ñ—Ä–∞–∑–µ –∏ 
    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ—ë –≤ –ø–∞–ø–æ—á–∫—É —Å –∏–Ω–¥–µ–∫—Å–æ–º —Ñ—Ä–∞–∑—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
    drawing = svg2rlg(output_path)
    renderPM.drawToFile(drawing, f"plots/{str(idx)}.png", fmt='PNG', bg=14735527)
    # —Å–∞–º–æ–µ —Å–ª–æ–∂–Ω–æ–µ: –ø–µ—Ä–µ—Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—Ö–µ–º—ã –≤ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Ç–∞–∫, —á—Ç–æ–±—ã –∫—Ä–∞—Å–æ—Ç–∞ –Ω–µ —É–µ—Ö–∞–ª–∞
    # –≤ –ø–æ–∏—Å–∫–∞—Ö –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –º–æ–¥—É–ª—è –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∫ –Ω–∞–π–¥–µ–Ω–Ω–æ–º—É –º–æ–¥—É–ª—é —è —á—É—Ç—å –Ω–µ —É–º–µ—Ä–ª–∞
    # –Ω—É –≤–æ—Ç –∫—Ç–æ –¥–µ–ª–∞–µ—Ç –¥–µ—Å—è—Ç–∏—Ä–∏—á–Ω—É—é –∫–æ–¥–∏—Ä–æ–≤–∫—É —Ü–≤–µ—Ç–æ–≤? –∑–∞—á–µ–º? –ø–æ—á–µ–º—É –Ω–µ –ø—Ä–æ–ø–∏—Å–∞—Ç—å 
    # —Ö–æ—Ç—è –±—ã –≥–¥–µ-–Ω–∏–±—É–¥—å, —á—Ç–æ —ç—Ç–æ –¥–µ—Å—è—Ç–∏—Ä–∏—á–Ω–∞—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞?
    pathlib.Path.unlink(output_path)
    for t in docru:
        lemma_line += f" {t.lemma_}"
        # –¥–æ–±–∞–≤–ª—è–µ–º –≤ –ø—Ä–æ–∫—É –ª–µ–º–º —Ä—É—Å—Å–∫–∏–µ –ª–µ–º–º—ã —Ç–æ–∂–µ
    data.at[idx, 'lemmas'] = lemma_line
    data.at[idx, 'analize'] = analize
    # –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü—É

data.to_csv('archieve/analize.csv', index=False)
# —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—à—É –∫—Ä–∞—Å–∏–≤—É—é —Ç–∞–±–ª–∏—á–∫—É –≤ —Ñ–∞–π–ª
